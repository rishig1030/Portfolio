*{
    margin: 0;
    padding: 0;


    /*this property allow us to use the padding and margin included in the total height of div box,
    initially total height = height of content + padding + margin
    now total height = height of content , padding and mergin is already included*/
    box-sizing: border-box;
    list-style: none;
}

:root{

    /* --color-primary is the name of css variable , 
    here :root represent the html tag*/
    --color-primary: #191d2b;
    --color-secondary: #27AE60;
    --color-white: #FFFFFF;
    --color-black: #000;
    --color-grey0: #f8f8f8;
    --color-grey-1: #dbe1e8;
    --color-grey-2: #b2becd;
    --color-grey-3: #6c7983;
    --color-grey-4: #454e56;
    --color-grey-5: #2a2e35;
    --color-grey-6: #12181b;
    --br-sm-2: 14px;
    --box-shadow-1: 0 3px 15px rgba(0,0,0,.3);
}

body{

    background-color: var(--color-primary); /*method to use the primary color*/
    font-size: 1.1rem;
    color: var(--color-white); /*default color of text*/
    transition: all .4s ease-in-out;
    font-family: "Poppins", sans-serif;
}

a{
    display: inline-block; /* inline-block , all element will combined as a single inline element
    ,similar to inline but it also allow us to change the height and width of the element*/
    text-decoration: none;
    color: inherit; /*accquire properties from its parent element*/
    font-family: inherit;
}

header{
    height: 100vh;
    color: var(--color-white);
    overflow: hidden;  /* if somecontent is out of the element , it will get hidden*/
}

section{
    min-height: 100vh;
    width: 100%;

    /* all the section are top of each other (since absolute) , and to create switching effect we need to use javascript*/
    position: absolute; /*will get removed from the document flow */
    left: 0;
    top: 0;
    padding: 3rem 18rem;
}

.section{
    transform: translateY(-100%) scale(0);
    transition: all 0.4s ease-in-out;
    background-color: var(--color-primary);
}

.sec1{
    display: none;
    transform: translate(0) scale(1);
}
.sec2{
    display: none;
    transform: translate(0) scale(1);
}
.sec3{
    display: none;
    transform: translate(0) scale(1);
}
.sec4{
    display: none;
    transform: translate(0) scale(1);
    background-color: pink;
}
.sec5{
    display: none;
    transform: translate(0) scale(1);
    background-color: orange;
}

.active{
    display: block;
    animation: myAnimation 1s ease-in-out;
}

@keyframes myAnimation {
    from{
        transform: translateY(-100%) scaleY(0);
    }
    to{
        transform: translateY(0) scaleY(1);
    }
}

.controlls{
    position: fixed;
    z-index: 10;
    top: 50%;
    right: 3%;
    display: flex;
    flex-direction: column;
    transform: translateY(-50%);
    align-items: center;
    justify-content: center;

    /*  we will give style to active btn , and rest btn will be as same
    will add active btn class to other btns as well using javascript*/

    
    .control{
        padding: 1rem;
        cursor: pointer;
        background-color: var(--color-grey-4);
        width: 55px;
        height: 55px;
        border-radius: 50%;
        
        /* to make the icon as center */
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0.7rem 0;
        box-shadow: var(--box-shadow-1);
        
        /* we can nested in scss the elements */
        i{
            font-size: 1.2rem;
            color: var(--color-grey-2);
            
            /* its means if we click it doesn't reach as per now*/
            pointer-events: none;
        }
    }
    .active-btn{
        background-color: var(--color-secondary);
        transition: 0.4 ease-in-out;
        i{
            color: var(--color-white);
        }
    }
}